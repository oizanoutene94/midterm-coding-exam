Please answer the below core-java Questions:

What is programing language?
A.
A programming language is a computer language that is used by programmers to communicate with computers.It is
also a set of instruction written for computer to follow in a specific languages such as(Java,Python,C#,C++
...ect)

What jdk contains or composed of and define each components?
A.
First,java development kit(JDK) is a software development environment used for developing java applications.
components of JDK are:
-Java Runtime Environment(JRE): primarily is a part of jdk,it is a software platform where all the Java Source
codes are executed
-Interpreter(JAVA): It acts as a deployment launcher where it load a class file and interprets the source code
compiled by javac compiler.
-compiler(JAVAC): The javac is used to convert source code into bytecode
-Archiver(JAR): The jars helps archives to manage the jar files in the package library.
-documentation generator(JAVADOC): The javadoc generate documentation for the comments added in the source code.
 Note:there are more JDK components but those i mentioned are the most comment once.


What is IDE?
A.
IDE stand for Integrated Development environment it is basically a software used as integrated platform by developers
to edit,debuge, compile and run the codes.
developers uses a textEditor such as notepad or notepad++ to write the codes then there is a compiler that checks the
codes and convert them, then it comes the console output where all logs and errors printed.IDE basically convert all
 these three to one software.


What are the IDEs available in the market to support java?
A.
-Visual Studio
-Intellij IDEA
-Eclipse
-Jetbrains Fleet
-Xcode
-NetBeans
-Atom and so much more IDEs.

Explain the entire java life cycle.
what is class?
A.
A class in java is a blueprint from which objects are created.Also,a class is a container full of variables
and methods(properties and behaviours).

What is object?
A.
An object is an instance of java class which has properties and behaviours attached.The object is a real world
entity.


What is the entry point of an application?
A.
The entry point of an application identifies a resource that is an access point to an application. Application entry
points are used to control users' access to different versions of an application that is deployed on a platform.

Why main is static?
A.
Java main method is always static,so that compiler can call it without creating any object.
The main method in Java must be  always declared static.If the static keyword missed,the Java program will
compile but a runtime error will be thrown.


Which class is the superclass of all classes?
A.
The object class is the superclass of all classes.

What is difference between path and classpath variables?
A.
Path variable is used to set the path for all Java software tools like javac.exe, java.exe, javadoc.exe, ...ect
classpath variable is used to set the path for java classes only.

What is the difference between an Interface and Abstract class?
A.
Methods in java interface are implicitly abstract and cannot have implementation.A java abstract class can have
Many instance methods(abstract or no abstract methods) that implements a default behaviors.
Variables declared in java interface is by default static and final. Abstract class can have final and no final
variables.
Interface supports multiple inheritance whereas Abstract class does not.
Abstract class can be extended using the "extends" keyword whereas  interface can be implemented using
the "implements" keyword.
Members of java interface are public by default unlike the members in the abstract class that can hold private
and protected..so on.


Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A.
No, we can not create a object of an abstract class.
To implement features of an abstract class, we inherit subclasses from it and create objects of the subclass.
A subclass must override all abstract methods of an abstract class. However, if the subclass is declared abstract,
it's not mandatory to override abstract methods.


what is Access Specifier?
A.
Java provides entities called “Access Modifiers or access specifiers” that help us to restrict the scope or visibility
 of a package, class, constructor, methods, variables, or other data members. These access modifiers are also called
 “Visibility Specifiers”

What is OOP ? Define each feature of java OOP.
A.
Object-Oriented Programming System (OOPs) is a programming concept that works on the principles of abstraction,
encapsulation, inheritance, and polymorphism. It allows users to create objects they want and create methods
to handle those objects
-- oops features: we have
-object
-class
-inheritance
-abstraction
-polymorphism
-encapsulation

What is Java Package and which package is imported by default?
A.
A package in Java is used to group related classes. Think of it as a folder in a file directory. We use
packages to avoid name conflicts, and to write a better maintainable code.
--lang package and a no-name package (also called default package) are imported by default in all the classes of Java.


What is API? Name list of API that you have used so far.
A.
API stands for "Application Programming Interface," which is a set of protocols, routines, and tools for building
 software applications. An API specifies how software components should interact with each other, providing a
 standardized way for different applications to communicate and share data.

--- list of API that i have used so far are:
GitHub API: Allows developers to access GitHub data, such as repositories, commits, and issues, and build applications
 that interact with the GitHub platform.
 there are other API on site everyone can use such as Stripe API,Twitter API,OpenWeatherMap API,Google Maps API.


Does java support multiple inheritance, explain why or why not?
A.
Java does not support multiple inheritance of classes, but it does support multiple inheritance of interfaces.

Multiple inheritance is the ability of a class to inherit features and characteristics from multiple classes. In Java,
a class can only extend one other class, and therefore cannot inherit from multiple classes. This is done to avoid the
"diamond problem," which can arise when multiple parent classes have the same method or attribute name, making it
ambiguous which implementation should be used.

However, Java does support multiple inheritance of interfaces. An interface is a set of method signatures that a class
can implement, and a class can implement multiple interfaces. This allows the class to inherit functionality from
multiple sources, without the issues that can arise from multiple inheritance of classes.

In summary, Java does not support multiple inheritance of classes to avoid the diamond problem, but it does support
multiple inheritance of interfaces to enable more flexible code reuse.

What is method overloading and when it happens?
A.
Method overloading is a compile time polymorphysm where two or more methods in a class have the same name but different
parameters. When a method is overloaded, it means that there are multiple versions of that method in the same class,
but they accept different arguments or parameters.
--Method overloading happens at compile time, where the compiler determines which version of the method to call based
 on the number, type, and order of the arguments passed to it.

Explain exceptions in java and how to handle it.
A.
In Java, an exception is an event that occurs during the execution of a program that disrupts the normal flow of
instructions. When an exception occurs, the Java Virtual Machine (JVM) creates an object called an "exception object"
that contains information about the error, such as the type of exception and where it occurred in the program.
The JVM then looks for a block of code that can handle the exception, called an "exception handler."

---To handle exceptions in Java, you use a try-catch block.

What is static keyword in java? How it has been used in variables and methods ?
A.
In Java, the keyword "static" is used to indicate that a variable or method belongs to the class itself, rather than
 to an instance of the class. This means that there is only one copy of the static variable or method shared by all
 instances of the class.
 ---In summary, the "static" keyword is used to indicate that a variable or method belongs to the class, rather than
 to any instance of the class. Static variables are often used to represent global or constant values, while static
  methods are often used for utility methods that do not depend on the state of any particular instance of the class.

What is final and how it has been used variables and methods?
A.
In Java, the keyword "final" is used to indicate that a variable or method cannot be changed after it has been
initialized. Once a final variable or method has been assigned a value, it cannot be reassigned or overridden.
---In summary, the "final" keyword is used to indicate that a variable or method cannot be changed or overridden
after it has been initialized. Final variables are often used to represent constants or values that should not be
changed, while final methods are often used to prevent subclasses from changing the behavior of a method. Final
classes are often used to prevent inheritance of a class.

What is final, finally and finalize?
A.
"final", "finally", and "finalize" are three different concepts in Java that are often confused with one another
because of their similar names.
-final:
In Java, "final" is a keyword used to declare a variable, a method, or a class as constant and immutable. If a
variable is declared as final, its value cannot be changed once it has been initialized. If a method is declared as
final, it cannot be overridden by any subclass. If a class is declared as final, it cannot be subclassed.
--finally:
In Java, "finally" is a block of code that is used in exception handling to execute a set of statements after the try
and catch blocks have been executed, regardless of whether an exception has been thrown or not. The "finally" block
is typically used to release resources, such as closing a database connection or a file, that were opened in the try
block.
---finalize:
In Java, "finalize" is a method that is called by the garbage collector when an object is about to be destroyed. The
"finalize" method can be overridden by a class to perform cleanup operations, such as releasing system resources,
before the object is destroyed.

What is a constructor ?
A.
In Java, a constructor is a special method that is used to initialize objects of a class. When an object of a class
is created, a constructor is called automatically to initialize the object's data members and set its initial state.
--constructor always is defined with the same name as the class.


Can we have multiple constructors in a class?
A.
Yes, we can have multiple constructors in a class in Java. This is known as constructor overloading.

When a class has multiple constructors, each constructor can have a different parameter list. This allows us to create
objects of the class in different ways, depending on the parameters passed to the constructor.


If we don't have a constructor declared, what is called during the object creation?
ANSWER.
If we don't have a constructor declared in a Java class, then the compiler provides a default constructor for
the class. This default constructor is a no-argument constructor that simply initializes all data members of the object
 to their default values (e.g., 0 for numeric data types, null for reference types).


What is "this" keyword in java ?
ANSWER.
In Java, "this" is a keyword that refers to the current instance of the class in which it is used. It is used to
differentiate between class-level variables and instance-level variables, as well as to call methods or constructors
of the current instance.


What is "super" keyword in java? How many possible way can you use?
ANSWER.
"super" is a keyword that refers to the parent class of the current class. It can be used to call a constructor or a
method of the parent class, or to access the parent class's instance variables and methods.
-- Here are some possible ways to use the "super" keyword in Java:
1-Calling a parent class constructor
2-Accessing parent class instance variables
3-Calling a parent class method

What is JVM stand for ?
ANSWER.
JVM stands for Java Virtual Machine. It is an abstract machine that provides a runtime environment for Java bytecode
to be executed.

Is JVM platform independent?
ANSWER.
Yes, the JVM (Java Virtual Machine) is platform independent.

What version of java are you using?
ANSWER.
JAVA 8 version

What is JAR stand for ?
ANSWER.
JAR stands for Java ARchive. It is a file format used in Java for packaging and distributing Java classes, resources,
and metadata. JAR files are created using the Java archive tool, which compresses and archives the files into a single
 .jar file.

What is the difference between JDK and JVM?
ANSWER.
JDK is used for developing Java applications, while JVM is used for executing Java bytecode. The JDK includes the
necessary tools and libraries for compiling and building Java applications, while the JVM provides the runtime
environment for executing the compiled bytecode.

What is the difference between JVM and JRE?
ANSWER.
JRE is a complete package for running Java applications, while JVM is a component of the JRE that provides the runtime
 environment for executing Java bytecode.

What is compile time and run time?
ANSWER.
compile time refers to the time during which the source code is compiled into machine code, while run time refers to
the time during which the compiled code is executed. Compile time errors occur during the compilation process, while
 run time errors occur during program execution.

What is heap?
ANSWER.
In computer science, the heap is a region of memory used for dynamic memory allocation. It is a region of a computer's
memory that is managed by the operating system or memory manager, and is separate from the stack where local variables
and function calls are stored.
The heap is commonly used in languages like Java, C++, and Python, which support dynamic memory allocation. In Java,
for example, all objects are allocated on the heap, and Java's garbage collector is responsible for reclaiming unused
memory and freeing up space for new objects.

how java manage its memory?
ANSWER.
In Java, memory management is handled automatically by the Java Virtual Machine (JVM) using a combination of techniques
 including garbage collection and automatic memory allocation.


What is the difference between String, StringBuffer and StringBuilder?
ANSWER.
String, StringBuffer, and StringBuilder are classes used for manipulating character sequences. While they share some
similarities, they have different characteristics and are used in different situations.
In summary, String is immutable, while StringBuffer and StringBuilder are mutable. String is thread-safe, while
StringBuffer and StringBuilder have different thread-safety characteristics. Use String when the value won't change,
and StringBuffer or StringBuilder when the value will change frequently. Use StringBuffer when thread-safety is
required, and StringBuilder when thread-safety is not a concern.


What is Singleton class?
ANSWER.
A Singleton class is a class that can only be instantiated once, ensuring that there is only one instance of the class
in the entire program. The Singleton pattern is used to restrict the creation of multiple instances of a class and to
provide a single point of access to that instance.


What is Serialization and Deserialization?
ANSWER.
Serialization is the process of converting an object into a format that can be easily stored, transmitted or persisted
 to disk. In Java, serialization is achieved by implementing the Serializable interface, which allows objects to be
 converted into a stream of bytes that can be saved to a file or transmitted over a network.
 --Deserialization is the process of converting the serialized data back into an object. In Java, deserialization is
 achieved by reading the serialized data from a file or network stream and using the ObjectInputStream class to
 reconstruct the original object.

Difference between while and do..while loop?
ANSWER.
In while loop the condition is checked at the beginning of each iteration. If the condition is false, the loop is
terminated and control passes to the next statement in the program.
--In do while loop the condition is checked at the end of each iteration instead of the beginning. This means that the
block of code is executed at least once, even if the condition is initially false.

What is Enum?
ANSWER.
In Java, an enum is a special data type used to define a fixed set of constants. An enum can be thought of as a class
 that has a fixed number of instances, where each instance represents one of the possible values of the enum type.

What is Iterator?
ANSWER.
Iterator is an interface that provides a way to iterate over a collection of objects. It allows you to traverse a
collection (such as a List, Set, or Map) and perform various operations on its elements, such as removing them or
checking for their presence.


Which one will take more memory, an int or Integer?
ANSWER.
When you declare a variable of type int, it takes up 32 bits of memory (or 4 bytes) on the stack. On the other hand,
 when you create an object of type Integer, it takes up additional memory on the heap to store the object overhead,
 such as the object header and reference to the underlying int value.So, in general, using an int variable will take
 less memory than using an Integer object.


Why is String Immutable in Java?
ANSWER.
In Java, a String is immutable, which means that once a String object is created, its contents cannot be changed.

What is constructor chaining in Java?
ANSWER.
Constructor chaining in Java is the process of calling one constructor from another constructor within the same class
or from a parent class. This is often used to avoid duplicating code in multiple constructors or to initialize common
fields across different constructors.

The difference between Serial and Parallel Garbage Collector?
ANSWER.
Overall, the choice of garbage collector depends on the specific needs of the application. For small-scale applications
 or applications with low memory requirements, the serial garbage collector may be sufficient. For high-throughput
 applications that require large amounts of memory, the parallel garbage collector may provide better performance.


What is JIT stands for?
ANSWER.
JIT stands for Just-In-Time. It is a type of compiler that is used by Java to optimize the performance of the code at
 runtime.

Explain Java Heap space and Garbage collection?
ANSWER.
In Java, the heap is the runtime data area where objects are allocated. The Java Virtual Machine (JVM) creates a heap
 at startup, and it is shared across all threads in the JVM. The heap is where objects are stored and accessed by the
 application. The size of the heap is specified by the -Xmx command-line option when starting the JVM.

---Java has an automatic garbage collection mechanism that periodically frees memory that is no longer needed by the
 application. Garbage collection is the process of identifying and removing objects that are no longer in use by the
 application. The garbage collector runs on a separate thread, and it periodically scans the heap to identify unused
 objects. Once an object is identified as unused, the garbage collector frees the memory associated with the object.

Can you guarantee the garbage collection process?
ANSWER.

What is the difference between stack and heap in Java?
ANSWER.
the stack is used for storing method calls and local variables, while the heap is used for storing objects and arrays.
 The stack is organized as a LIFO data structure, while the heap is not. The size of the stack is fixed and determined
 at runtime, while the size of the heap can be adjusted using the -Xmx parameter.

What is reflection in java and why is it useful?
ANSWER.
Reflection is a feature in Java that allows an application to inspect or modify its own structure and behavior at
runtime. This includes examining the properties, methods, and fields of classes, as well as dynamically creating new
instances of classes, invoking methods, and accessing fields.

what is multithreading in java?
ANSWER.
Multithreading is a programming concept that allows a single program to perform multiple tasks concurrently, or in
 parallel. In Java, multithreading is implemented using the Thread class and the Runnable interface.

What is the use of synchronization in Java?
ANSWER.
Synchronization in Java is used to coordinate the access of multiple threads to shared resources, such as objects,
variables, and methods.


What is Framework?
ANSWER.
In software development, a framework is a set of pre-written code and libraries that provides a standardized way of
building and deploying applications. A framework provides a structure and a set of rules that developers can use to
build applications without having to write all the code from scratch.

What are the testing Framework available in java?
ANSWER.
Junit, TestNG,cucumber,selenium... ect

Difference between jUnit and testNG?
ANSWER.
Test Execution: JUnit executes tests based on the order they are defined in the code, while TestNG allows you to
specify the order in which tests should be executed.
--Annotations: Both frameworks use annotations to mark test methods, but TestNG has more annotations available,
including ones for grouping tests, specifying dependencies between tests, and controlling test execution.
--Reporting: TestNG generates more detailed and customizable test reports than JUnit...SO ON.

What are the dependencies for this project?
ANSWER.

what is dependency injection in java?
ANSWER.
Dependency Injection (DI) is a design pattern in Java that allows you to reduce the coupling between objects and make
 your code more modular, maintainable, and testable.


What is static binding and dynamic binding?
ANSWER.
Static binding and dynamic binding are two types of method binding in Java. The main difference between them is when
 the binding between a method call and the corresponding method implementation is resolved.









